# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby

on:
  push:
    branches: [ "master", "development" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: holymusic_app_rails_test
        ports:
        - 5432:5432
        # Wait for the database to be ready before running steps
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        ruby-version: ['3.2.9']

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}

      - name: Dependencies
        run: |
          # Install dependencies
          sudo apt-get update -qq
          sudo apt-get install -y nodejs postgresql-client wkhtmltopdf libpq-dev

      - name: Install Gems dependencies
        env:
          RAILS_ENV: test
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3

      - name: Prepare DB
        env:
          RAILS_ENV: test
          DATABASE_URL: 'postgres://postgres:postgres@127.0.0.1:5432/holymusic_app_rails_test'
          PGHOST: 127.0.0.1
          PGUSER: postgres
          PGPASSWORD: postgres
          PGDATABASE: holymusic_app_rails_test
        run: |
          bundle exec rails db:prepare

      - name: Install Node dependencies
        run: yarn install --frozen-lockfile

      - name: Build Esbuild
        run: yarn build

      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: 'postgres://postgres:postgres@127.0.0.1:5432/holymusic_app_rails_test'
          PGHOST: 127.0.0.1
          PGUSER: postgres
          PGPASSWORD: postgres
          PGDATABASE: holymusic_app_rails_test
        run: bundle exec rspec spec

      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          verbose: true

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
